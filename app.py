{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8b232710-efa0-4bab-92f6-263315783080",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import dash\n",
    "import dash_core_components as dcc\n",
    "import dash_html_components as html\n",
    "from dash.dependencies import Input, Output\n",
    "import matplotlib.pyplot as plt\n",
    "import gdown\n",
    "# Cargar los archivos CSV en DataFrames\n",
    "# URLs de los archivos CSV en Google Drive\n",
    "#url_colonias = \"https://drive.google.com/uc?id=17YNIyLvX0Qgje8wL9NVgNzRPgJLqD5lK\"\n",
    "#url_llamadas = \"https://drive.google.com/uc?id=1Y7kwkgkdoAFSnNEugHxCAAiu2qxBI_4v\"\n",
    "\n",
    "# Descargar los archivos CSV desde Google Drive\n",
    "#gdown.download(url_colonias, \"colonias_sigeh.csv\", quiet=False)\n",
    "#gdown.download(url_llamadas, \"llamadas_por_colonia.csv\", quiet=False)\n",
    "\n",
    "# Cargar los archivos CSV en DataFrames\n",
    "df_colonias = pd.read_csv(\"colonias_sigeh.csv\")\n",
    "llamadas_por_colonia_df = pd.read_csv(\"llamadas_por_colonia.csv\")\n",
    "# ... (Código para procesar los datos y crear los widgets)\n",
    "\n",
    "# Crear la aplicación Dash\n",
    "app = dash.Dash(__name__)\n",
    "\n",
    "app.layout = html.Div([\n",
    "    html.H1(\"Visualización de Llamadas de Seguridad Pública\"),\n",
    "    html.Label(\"Selecciona un Municipio:\"),\n",
    "    dcc.Dropdown(\n",
    "        id='municipio-dropdown',\n",
    "        options=[{'label': municipio, 'value': municipio} for municipio in llamadas_por_colonia_df['MUNICIPIO'].unique()],\n",
    "        value=llamadas_por_colonia_df['MUNICIPIO'].unique()[0]\n",
    "    ),\n",
    "    html.Label(\"Selecciona una Colonia:\"),\n",
    "    dcc.Dropdown(id='colonia-dropdown'),\n",
    "    dcc.Graph(id='llamadas-grafico')\n",
    "])\n",
    "\n",
    "# Función para actualizar las opciones de colonia según el municipio seleccionado\n",
    "@app.callback(\n",
    "    Output('colonia-dropdown', 'options'),\n",
    "    [Input('municipio-dropdown', 'value')]\n",
    ")\n",
    "def actualizar_colonias(municipio):\n",
    "    colonias = llamadas_por_colonia_df[llamadas_por_colonia_df['MUNICIPIO'] == municipio]['COLONIAS.x'].unique()\n",
    "    return [{'label': colonia, 'value': colonia} for colonia in colonias]\n",
    "\n",
    "# Función para mostrar el gráfico de las 10 llamadas más comunes para la colonia seleccionada\n",
    "@app.callback(\n",
    "    Output('llamadas-grafico', 'figure'),\n",
    "    [Input('colonia-dropdown', 'value'),\n",
    "     Input('municipio-dropdown', 'value')]\n",
    ")\n",
    "def mostrar_grafico(colonia, municipio):\n",
    "    llamadas_comunes = llamadas_por_colonia_df[\n",
    "        (llamadas_por_colonia_df['MUNICIPIO'] == municipio) &\n",
    "        (llamadas_por_colonia_df['COLONIAS.x'] == colonia)\n",
    "    ]\n",
    "    llamadas_comunes = llamadas_comunes.iloc[:, 4:].sum().nlargest(10)\n",
    "    fig = {\n",
    "        'data': [\n",
    "            {'x': llamadas_comunes.index, 'y': llamadas_comunes.values, 'type': 'bar'}\n",
    "        ],\n",
    "        'layout': {\n",
    "            'title': f'Top 10 Llamadas más Comunes en {colonia}, {municipio}',\n",
    "            'xaxis': {'title': 'Tipo de Llamada'},\n",
    "            'yaxis': {'title': 'Número de Llamadas'},\n",
    "            'height': 600\n",
    "        }\n",
    "    }\n",
    "    return fig"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
